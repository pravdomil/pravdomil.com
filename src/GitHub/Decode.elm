module GitHub.Decode exposing (..)

{-| Generated by elm-json-interop.
-}

import GitHub exposing (..)
import Json.Decode as D exposing (Decoder)
import Utils.Json.Decode_ as D_


response : Decoder Response
response =
    D.map (\v1 -> { data = v1 })
        (D.field "data"
            (D.map (\v1 -> { viewer = v1 })
                (D.field "viewer"
                    (D.map (\v1 -> { repositories = v1 })
                        (D.field "repositories"
                            (D.map (\v1 -> { nodes = v1 })
                                (D.field "nodes" (D.list repository))
                            )
                        )
                    )
                )
            )
        )


repository : Decoder Repository
repository =
    D.map5
        (\v1 v2 v3 v4 v5 ->
            { name = v1
            , description = v2
            , url = v3
            , homepageUrl = v4
            , repositoryTopics = v5
            }
        )
        (D.field "name" D.string)
        (D_.maybeField "description" (D_.maybe D.string))
        (D.field "url" D.string)
        (D_.maybeField "homepageUrl" (D_.maybe D.string))
        (D.field "repositoryTopics"
            (D.map (\v1 -> { nodes = v1 })
                (D.field "nodes"
                    (D.list
                        (D.map (\v1 -> { topic = v1 })
                            (D.field "topic"
                                (D.map (\v1 -> { name = v1 })
                                    (D.field "name" D.string)
                                )
                            )
                        )
                    )
                )
            )
        )
